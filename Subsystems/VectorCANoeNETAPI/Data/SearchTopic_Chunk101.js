define({"7290":{y:0,u:"../Content/html/9194afc2-e180-0a64-99ad-5993726f809c.htm",l:-1,t:"IVT2848.OutputSource13To16 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the output source.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cOutputSource\u003e OutputSource13To16 { get; } /* */ Property Value Type:  IWriteValue /* */ OutputSource /* */ Version Information ..."},"7291":{y:0,u:"../Content/html/c5996c76-5311-fa7e-b2b9-699ed6145217.htm",l:-1,t:"IVT2848.OutputSource17To20 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the output source.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cOutputSource\u003e OutputSource17To20 { get; } /* */ Property Value Type:  IWriteValue /* */ OutputSource /* */ Version Information ..."},"7292":{y:0,u:"../Content/html/088f6775-499c-5c85-75f6-030ba284880f.htm",l:-1,t:"IVT2848.OutputSource1To4 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the output source.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cOutputSource\u003e OutputSource1To4 { get; } /* */ Property Value Type:  IWriteValue /* */ OutputSource /* */ Version Information ..."},"7293":{y:0,u:"../Content/html/69c33f11-3ccd-4122-6f91-de595ead1f4f.htm",l:-1,t:"IVT2848.OutputSource21To24 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the output source.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cOutputSource\u003e OutputSource21To24 { get; } /* */ Property Value Type:  IWriteValue /* */ OutputSource /* */ Version Information ..."},"7294":{y:0,u:"../Content/html/b026bca1-5ea8-98b4-8c1f-bf8d139e5804.htm",l:-1,t:"IVT2848.OutputSource25To28 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the output source.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cOutputSource\u003e OutputSource25To28 { get; } /* */ Property Value Type:  IWriteValue /* */ OutputSource /* */ Version Information ..."},"7295":{y:0,u:"../Content/html/298a336c-53be-f5fe-6fef-f023c8259698.htm",l:-1,t:"IVT2848.OutputSource29To32 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the output source.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cOutputSource\u003e OutputSource29To32 { get; } /* */ Property Value Type:  IWriteValue /* */ OutputSource /* */ Version Information ..."},"7296":{y:0,u:"../Content/html/3c5ad3c9-7523-57f4-383b-b9951b87b645.htm",l:-1,t:"IVT2848.OutputSource33To36 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the output source.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cOutputSource\u003e OutputSource33To36 { get; } /* */ Property Value Type:  IWriteValue /* */ OutputSource /* */ Version Information ..."},"7297":{y:0,u:"../Content/html/5af14d24-d56e-3f60-4b4d-ab4981c9c0ae.htm",l:-1,t:"IVT2848.OutputSource37To40 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the output source.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cOutputSource\u003e OutputSource37To40 { get; } /* */ Property Value Type:  IWriteValue /* */ OutputSource /* */ Version Information ..."},"7298":{y:0,u:"../Content/html/281fc499-9482-427d-b965-a20197489dde.htm",l:-1,t:"IVT2848.OutputSource41To44 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the output source.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cOutputSource\u003e OutputSource41To44 { get; } /* */ Property Value Type:  IWriteValue /* */ OutputSource /* */ Version Information ..."},"7299":{y:0,u:"../Content/html/c3a6c99e-8064-9bb6-aae5-a1f707d39913.htm",l:-1,t:"IVT2848.OutputSource45To48 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the output source.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cOutputSource\u003e OutputSource45To48 { get; } /* */ Property Value Type:  IWriteValue /* */ OutputSource /* */ Version Information ..."},"7300":{y:0,u:"../Content/html/d36f5a7f-cf45-26a4-769a-6579e215afac.htm",l:-1,t:"IVT2848.OutputSource5To8 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the output source.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cOutputSource\u003e OutputSource5To8 { get; } /* */ Property Value Type:  IWriteValue /* */ OutputSource /* */ Version Information ..."},"7301":{y:0,u:"../Content/html/c80b1bc3-5fe3-dac0-7cf5-2abf86bdd109.htm",l:-1,t:"IVT2848.OutputSource9To12 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the output source.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cOutputSource\u003e OutputSource9To12 { get; } /* */ Property Value Type:  IWriteValue /* */ OutputSource /* */ Version Information ..."},"7302":{y:0,u:"../Content/html/e961116b-053c-3f29-bfc5-bb7087727e30.htm",l:-1,t:"IVT2848.Threshold17To24 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the thresholds for channel 17 to 24.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cdouble\u003e Threshold17To24 { get; } /* */ Property Value Type:  IWriteValue /* */ Double /* */ The threshold. Version ..."},"7303":{y:0,u:"../Content/html/b31934e4-917c-cfaa-b0fa-514a0224cb23.htm",l:-1,t:"IVT2848.Threshold1To8 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the thresholds for channel 1 to 8.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cdouble\u003e Threshold1To8 { get; } /* */ Property Value Type:  IWriteValue /* */ Double /* */ The threshold. Version ..."},"7304":{y:0,u:"../Content/html/03d59b55-490f-9d42-86b7-5dedd490d080.htm",l:-1,t:"IVT2848.Threshold25To32 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the thresholds for channel 25 to 32.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cdouble\u003e Threshold25To32 { get; } /* */ Property Value Type:  IWriteValue /* */ Double /* */ The threshold. Version ..."},"7305":{y:0,u:"../Content/html/67b6fa69-adcc-bd48-8369-3630309d5a86.htm",l:-1,t:"IVT2848.Threshold33To40 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the thresholds for channel 33 to 40.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cdouble\u003e Threshold33To40 { get; } /* */ Property Value Type:  IWriteValue /* */ Double /* */ The threshold. Version ..."},"7306":{y:0,u:"../Content/html/7f5ed7a9-6c5d-328e-aed8-860f2fc2f10f.htm",l:-1,t:"IVT2848.Threshold41To48 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the thresholds for channel 41 to 48.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cdouble\u003e Threshold41To48 { get; } /* */ Property Value Type:  IWriteValue /* */ Double /* */ The threshold. Version ..."},"7307":{y:0,u:"../Content/html/d5d47d11-1212-d546-c85e-0cdbed1b9ce8.htm",l:-1,t:"IVT2848.Threshold9To16 Property ",i:2.50205109870151E-05,a:"Vector CANoe .NET API \n            Gets the thresholds for channel 9 to 16.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cdouble\u003e Threshold9To16 { get; } /* */ Property Value Type:  IWriteValue /* */ Double /* */ The threshold. Version ..."},"7308":{y:0,u:"../Content/html/2ca50724-8030-ae03-ba54-2d34d35b534c.htm",l:-1,t:"IVT2848 Methods",i:2.02090472842714E-05,a:"Vector CANoe .NET API The  IVT2848  type exposes the following members. Methods Top See Also Reference IVT2848 Interface Vector.CANoe.VTS Namespace"},"7309":{y:0,u:"../Content/html/ecaa03ec-4553-d845-d3dd-bb1efc94abcc.htm",l:-1,t:"IVT2848Channel Interface",i:0.000467330750861988,a:"Vector CANoe .NET API \n            This interface represents a VT2848 channel.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy public interface IVT2848Channel : IVTChannel /* */ The IVT2848Channel type exposes the following members. Properties Top ..."},"7310":{y:0,u:"../Content/html/05fff59f-5859-335a-45bf-12bdcdd4bb52.htm",l:-1,t:"IVT2848Channel Properties",i:1.95716561825411E-05,a:"Vector CANoe .NET API The  IVT2848Channel  type exposes the following members. Properties Top See Also Reference IVT2848Channel Interface Vector.CANoe.VTS Namespace"},"7311":{y:0,u:"../Content/html/0de12bf4-ea56-ac5e-2cc4-9c51f0f74835.htm",l:-1,t:"IVT2848Channel.Bits Property ",i:6.36186293542425E-05,a:"Vector CANoe .NET API \n            Gets the digital input signal (20 sampled values).\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadValueTransferCycle\u003cint[]\u003e Bits { get; } /* */ Property Value Type:  IReadValueTransferCycle /* */ /* */ Int32 /* ..."},"7312":{y:0,u:"../Content/html/48c238ff-799d-ba3b-f325-a7656a3ef429.htm",l:-1,t:"IVT2848Channel.CurBit Property ",i:6.36186293542425E-05,a:"Vector CANoe .NET API \n            Gets the digital input signal (1 sampled value).\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadValueTransferCycle\u003cbool\u003e CurBit { get; } /* */ Property Value Type:  IReadValueTransferCycle /* */ Boolean /* */ ..."},"7313":{y:0,u:"../Content/html/130b62e2-f296-4855-4e40-21bcd30d1733.htm",l:-1,t:"IVT2848Channel.CurveType Property ",i:6.36186293542425E-05,a:"Vector CANoe .NET API \n            Gets the type of the curve.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cCurveType\u003e CurveType { get; } /* */ Property Value Type:  IWriteValue /* */ CurveType /* */ Version Information Supported from: ..."},"7314":{y:0,u:"../Content/html/d206aade-181a-aeaf-35a4-1672f5d408f4.htm",l:-1,t:"IVT2848Channel.DigitalOutput Property ",i:6.36186293542425E-05,a:"Vector CANoe .NET API \n            Gets a value indicating whether the digital output is active.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadWriteValue\u003cbool\u003e DigitalOutput { get; } /* */ Property Value Type:  IReadWriteValue /* */ Boolean /* ..."},"7315":{y:0,u:"../Content/html/683cfc4f-2a59-a8e3-01dd-dd8e95bbf205.htm",l:-1,t:"IVT2848Channel.OutputMode Property ",i:6.36186293542425E-05,a:"Vector CANoe .NET API \n            Gets the output mode.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cVT2848OutputMode\u003e OutputMode { get; } /* */ Property Value Type:  IWriteValue /* */ VT2848OutputMode /* */ Version Information ..."},"7316":{y:0,u:"../Content/html/3be0382d-78de-7924-ee20-5340b3685a37.htm",l:-1,t:"IVT2848Channel.StimulationRunning Property ",i:6.36186293542425E-05,a:"Vector CANoe .NET API \n            Gets a value indicating whether the stimulation is running.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadValueTransferCycle\u003cbool\u003e StimulationRunning { get; } /* */ Property Value Type:  ..."},"7317":{y:0,u:"../Content/html/8ae77741-833e-fb39-c122-b1d3825c85ca.htm",l:-1,t:"IVT2848Channel Methods",i:2.08642675077283E-05,a:"Vector CANoe .NET API The  IVT2848Channel  type exposes the following members. Methods Top See Also Reference IVT2848Channel Interface Vector.CANoe.VTS Namespace"},"7318":{y:0,u:"../Content/html/c9c7ef05-8cbf-80da-b6c9-7dc2d5a1df8c.htm",l:-1,t:"IVT2848PWMMeasurementChannel Interface",i:0.000355744473684719,a:"Vector CANoe .NET API \n            This interface represents a VT2848 channel.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy public interface IVT2848PWMMeasurementChannel : IVT2848Channel, \n\tIVTChannel /* */ The IVT2848PWMMeasurementChannel type ..."},"7319":{y:0,u:"../Content/html/92a5d692-7690-23be-9cf9-3042fe2c75ad.htm",l:-1,t:"IVT2848PWMMeasurementChannel Properties",i:1.93968633508609E-05,a:"Vector CANoe .NET API The  IVT2848PWMMeasurementChannel  type exposes the following members. Properties Top See Also Reference IVT2848PWMMeasurementChannel Interface Vector.CANoe.VTS Namespace"},"7320":{y:0,u:"../Content/html/7a06f1a6-e8c0-79b4-c672-4860ca64c87f.htm",l:-1,t:"IVT2848PWMMeasurementChannel.PWMDC Property ",i:3.14921756397522E-05,a:"Vector CANoe .NET API \n            Gets the PWM duty cycle of input signal.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadValueTransferCycle\u003cdouble\u003e PWMDC { get; } /* */ Property Value Type:  IReadValueTransferCycle /* */ Double /* */ The PWM ..."},"7321":{y:0,u:"../Content/html/5c23eba0-ef8b-2750-6042-f139ea7aa376.htm",l:-1,t:"IVT2848PWMMeasurementChannel.PWMFreq Property ",i:3.14921756397522E-05,a:"Vector CANoe .NET API \n            Gets the PWM frequency of the input signal.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadValueTransferCycle\u003cdouble\u003e PWMFreq { get; } /* */ Property Value Type:  IReadValueTransferCycle /* */ Double /* */ The ..."},"7322":{y:0,u:"../Content/html/aa650f04-7b49-9583-6828-37179e5d9dcc.htm",l:-1,t:"IVT2848PWMMeasurementChannel.PWMMeasurementDuration Property ",i:3.14921756397522E-05,a:"Vector CANoe .NET API \n            Gets the duration of the PWM measurement.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cdouble\u003e PWMMeasurementDuration { get; } /* */ Property Value Type:  IWriteValue /* */ Double /* */ The duration of ..."},"7323":{y:0,u:"../Content/html/0c63ec1a-2683-da81-a744-7a2022253abd.htm",l:-1,t:"IVT2848PWMMeasurementChannel Methods",i:2.08642675077283E-05,a:"Vector CANoe .NET API The  IVT2848PWMMeasurementChannel  type exposes the following members. Methods Top See Also Reference IVT2848PWMMeasurementChannel Interface Vector.CANoe.VTS Namespace"},"7324":{y:0,u:"../Content/html/8ca03de5-ca1d-87f7-551e-43bff5708179.htm",l:-1,t:"IVT2848PWMStimChannel Interface",i:0.000451523059787316,a:"Vector CANoe .NET API \n            This interface represents a VT2848 channel.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy public interface IVT2848PWMStimChannel : IVT2848Channel, \n\tIVTChannel /* */ The IVT2848PWMStimChannel type exposes the ..."},"7325":{y:0,u:"../Content/html/9b2d26dd-af34-903b-df52-fc6178fbde54.htm",l:-1,t:"IVT2848PWMStimChannel Properties",i:1.93037671687704E-05,a:"Vector CANoe .NET API The  IVT2848PWMStimChannel  type exposes the following members. Properties Top See Also Reference IVT2848PWMStimChannel Interface Vector.CANoe.VTS Namespace"},"7326":{y:0,u:"../Content/html/f105ca2e-28ed-98bc-0d82-1b51ac30e859.htm",l:-1,t:"IVT2848PWMStimChannel.PWMOutputDC Property ",i:3.09339068083204E-05,a:"Vector CANoe .NET API \n            Gets the PWM output duty cycle.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadWriteValue\u003cdouble\u003e PWMOutputDC { get; } /* */ Property Value Type:  IReadWriteValue /* */ Double /* */ The PWM output duty cycle. ..."},"7327":{y:0,u:"../Content/html/f8467964-d8dd-1cbe-8ae0-5156c589c8de.htm",l:-1,t:"IVT2848PWMStimChannel.PWMOutputFreq Property ",i:3.09339068083204E-05,a:"Vector CANoe .NET API \n            Gets the PWM output frequency.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadWriteValue\u003cdouble\u003e PWMOutputFreq { get; } /* */ Property Value Type:  IReadWriteValue /* */ Double /* */ The PWM output frequency. ..."},"7328":{y:0,u:"../Content/html/7b0eedb7-55ef-f6b5-5782-00af5beb321b.htm",l:-1,t:"IVT2848PWMStimChannel.PWMRepeats Property ",i:3.09339068083204E-05,a:"Vector CANoe .NET API \n            Gets the number of PWM repeats.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cint\u003e PWMRepeats { get; } /* */ Property Value Type:  IWriteValue /* */ Int32 /* */ The number ofPWM repeats. Version ..."},"7329":{y:0,u:"../Content/html/b14ff46b-08c6-6622-a28b-70107bcd0dae.htm",l:-1,t:"IVT2848PWMStimChannel.PWMStartDelay Property ",i:3.09339068083204E-05,a:"Vector CANoe .NET API \n            Sets the PWM start delay.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cdouble\u003e PWMStartDelay { get; } /* */ Property Value Type:  IWriteValue /* */ Double /* */ The PWM start delay. Version Information ..."},"7330":{y:0,u:"../Content/html/ccf86a59-a14a-829a-4292-fe37cdcf0280.htm",l:-1,t:"IVT2848PWMStimChannel.WFPause Property ",i:3.09339068083204E-05,a:"Vector CANoe .NET API \n            Gets the wave form pause.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadWriteValue\u003cdouble\u003e WFPause { get; } /* */ Property Value Type:  IReadWriteValue /* */ Double /* */ The wave form pause. Version ..."},"7331":{y:0,u:"../Content/html/83eaba23-1038-a04b-01c0-e209feebb8bb.htm",l:-1,t:"IVT2848PWMStimChannel.WFTimeIncrement Property ",i:3.09339068083204E-05,a:"Vector CANoe .NET API \n            Gets the wave form time increment.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadWriteValue\u003cdouble\u003e WFTimeIncrement { get; } /* */ Property Value Type:  IReadWriteValue /* */ Double /* */ The wave form time ..."},"7332":{y:0,u:"../Content/html/a25334b3-9d32-2af8-b5a8-56b18a14267c.htm",l:-1,t:"IVT2848PWMStimChannel Methods",i:1.995199243666E-05,a:"Vector CANoe .NET API The  IVT2848PWMStimChannel  type exposes the following members. Methods Top See Also Reference IVT2848PWMStimChannel Interface Vector.CANoe.VTS Namespace"},"7333":{y:0,u:"../Content/html/0fe35e43-4022-e9ee-01d6-36be71fbf102.htm",l:-1,t:"IVT2848PWMStimChannel.LoadWFBitStream Method ",i:3.158213207621E-05,a:"Vector CANoe .NET API \n            Loads the WF bit stream.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy void LoadWFBitStream(\n\tstring fileName\n) /* */ Parameters fileName Type:  System /* */ String Name of the file. Return Value Type:  A value ..."},"7334":{y:0,u:"../Content/html/a5a0d07f-90a9-9535-015f-efe1b0fde217.htm",l:-1,t:"IVT2848PWMStimChannel.SetWFParams Method ",i:4.98100595728004E-05,a:"Vector CANoe .NET API Overload List Top See Also Reference IVT2848PWMStimChannel Interface Vector.CANoe.VTS Namespace"},"7335":{y:0,u:"../Content/html/395d2a30-3e4c-87df-6383-09eda6fd6ee8.htm",l:-1,t:"IVT2848PWMStimChannel.SetWFParams Method (Double, Double, Int32)",i:4.00498423194117E-05,a:"Vector CANoe .NET API \n            Sets the WF params.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy void SetWFParams(\n\tdouble timeIncrement,\n\tdouble pause,\n\tint numOfRepeats\n) /* */ Parameters timeIncrement Type:  System /* */ Double The time ..."},"7336":{y:0,u:"../Content/html/8398b600-19f9-2e25-2436-2f383cbe9df3.htm",l:-1,t:"IVT2848PWMStimChannel.SetWFParams Method (Double, Double, Int32, Double, Int32)",i:4.00498423194117E-05,a:"Vector CANoe .NET API \n            Sets the WF params.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy void SetWFParams(\n\tdouble timeIncrement,\n\tdouble pause,\n\tint numOfRepeats,\n\tdouble startDelay,\n\tint startPoint\n) /* */ Parameters timeIncrement ..."},"7337":{y:0,u:"../Content/html/d78589db-736b-eb1c-eb1e-53ce764d5caa.htm",l:-1,t:"IVT2848PWMStimChannel.StartStimulation Method ",i:3.158213207621E-05,a:"Vector CANoe .NET API \n            Starts the stimulation.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy void StartStimulation() /* */ Examples Copy  1void BitstreamOutput()\n 2{\n 3 // Get the VTSystem instance  4  IVTSystem vts = VTSystem.Instance;\n ..."},"7338":{y:0,u:"../Content/html/1b70d9a6-f57b-d172-9bfb-6bec6d45c5d4.htm",l:-1,t:"IVT2848PWMStimChannel.StopStimulation Method ",i:3.158213207621E-05,a:"Vector CANoe .NET API \n            Stops the stimulation.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy void StopStimulation() /* */ Version Information Supported from: 7.6 SP4 See Also Reference IVT2848PWMStimChannel Interface Vector.CANoe.VTS ..."},"7339":{y:0,u:"../Content/html/40e869e0-36a2-aa93-1841-451b46e3b669.htm",l:-1,t:"IVT5201 Interface",i:0.000233066652504052,a:"Vector CANoe .NET API \n            This interface represents a IVT5201 module.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy public interface IVT5201 : IVTModule /* */ The IVT5201 type exposes the following members. Properties Top Methods Top ..."},"7340":{y:0,u:"../Content/html/247b0de8-fed7-8458-dc0b-186bd444b668.htm",l:-1,t:"IVT5201 Properties",i:1.95716561825411E-05,a:"Vector CANoe .NET API The  IVT5201  type exposes the following members. Properties Top See Also Reference IVT5201 Interface Vector.CANoe.VTS Namespace"},"7341":{y:0,u:"../Content/html/ea1f3a83-8683-01e0-2736-5804011008cb.htm",l:-1,t:"IVT5201 Methods",i:1.98527868585894E-05,a:"Vector CANoe .NET API The  IVT5201  type exposes the following members. Methods Top See Also Reference IVT5201 Interface Vector.CANoe.VTS Namespace"},"7342":{y:0,u:"../Content/html/fbc9f976-e39f-bee3-7378-f15476805163.htm",l:-1,t:"IVT5201.AsEvMode Method ",i:2.71900704622478E-05,a:"Vector CANoe .NET API \n            Returns an EV mode interface to the VT5201 instance.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IVT5201EvMode AsEvMode() /* */ Return Value Type:  IVT5201EvMode The EV mode interface to the VT5201 instance ..."},"7343":{y:0,u:"../Content/html/b2ac9ded-ab60-be55-1878-67bae2f41754.htm",l:-1,t:"IVT5201.AsEvseMode Method ",i:2.71900704622478E-05,a:"Vector CANoe .NET API \n            Returns an EVSE mode interface to the VT5201 instance.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IVT5201EvseMode AsEvseMode() /* */ Return Value Type:  IVT5201EvseMode The EVSE mode interface to the VT5201 ..."},"7344":{y:0,u:"../Content/html/c4db714f-0305-f24e-8704-86e64c352770.htm",l:-1,t:"IVT5201.AsLegacyMode Method ",i:2.71900704622478E-05,a:"Vector CANoe .NET API \n            Returns an legacy mode interface to the VT5201 instance.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IVT5201LegacyMode AsLegacyMode() /* */ Return Value Type:  IVT5201LegacyMode The legacy mode interface to the ..."},"7345":{y:0,u:"../Content/html/9f0093a4-2212-8503-15e8-1ebeb5e0a3c2.htm",l:-1,t:"IVT5201EvMode Interface",i:0.000511584835733087,a:"Vector CANoe .NET API \n            This interface represents a IVT5201 module in EV mode.\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy public interface IVT5201EvMode : IVTModule /* */ The IVT5201EvMode type exposes the following members. Properties ..."},"7346":{y:0,u:"../Content/html/e4136cb7-4495-c9e7-7243-2ea4d47dbbe3.htm",l:-1,t:"IVT5201EvMode Properties",i:1.89109523555605E-05,a:"Vector CANoe .NET API The  IVT5201EvMode  type exposes the following members. Properties Top See Also Reference IVT5201EvMode Interface Vector.CANoe.VTS Namespace"},"7347":{y:0,u:"../Content/html/1d4c4bc9-a4f9-6cb3-7a25-654b47c79dd9.htm",l:-1,t:"IVT5201EvMode.Capacitance Property ",i:2.54012078638933E-05,a:"Vector CANoe .NET API \n            Sets the output capacitance\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IWriteValue\u003cdouble\u003e Capacitance { get; } /* */ Property Value Type:  IWriteValue /* */ Double /* */ The output capacitance. Version ..."},"7348":{y:0,u:"../Content/html/aed51784-7752-4e07-c506-b2de4dd877dd.htm",l:-1,t:"IVT5201EvMode.MeasChargingCurrent Property ",i:2.54012078638933E-05,a:"Vector CANoe .NET API \n            Gets the momentary charging current\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadValueTransferCycle\u003cdouble\u003e MeasChargingCurrent { get; } /* */ Property Value Type:  IReadValueTransferCycle /* */ Double /* */ ..."},"7349":{y:0,u:"../Content/html/95566be7-88d4-8c39-032c-3277193e4c45.htm",l:-1,t:"IVT5201EvMode.MeasCPState Property ",i:2.54012078638933E-05,a:"Vector CANoe .NET API \n            Gets the  momentary control pilot status\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadValueTransferCycle\u003cVT5201CPStates\u003e MeasCPState { get; } /* */ Property Value Type:  IReadValueTransferCycle /* */ ..."},"7350":{y:0,u:"../Content/html/778106c4-5795-be21-5051-3c234846640b.htm",l:-1,t:"IVT5201EvMode.MeasDutyCycle Property ",i:2.54012078638933E-05,a:"Vector CANoe .NET API \n            Gets the momentary value of the PWM duty cycle\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadValueTransferCycle\u003cdouble\u003e MeasDutyCycle { get; } /* */ Property Value Type:  IReadValueTransferCycle /* */ Double ..."},"7351":{y:0,u:"../Content/html/6b607384-ca4f-54ce-f395-ee17d432ae29.htm",l:-1,t:"IVT5201EvMode.MeasExtPPResistance Property ",i:2.54012078638933E-05,a:"Vector CANoe .NET API \n            Gets the momentary value of the external PP resistance\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadValueTransferCycle\u003cdouble\u003e MeasExtPPResistance { get; } /* */ Property Value Type:  IReadValueTransferCycle ..."},"7352":{y:0,u:"../Content/html/f166b409-2804-7abf-0935-67a3c32e94cd.htm",l:-1,t:"IVT5201EvMode.MeasFallTime Property ",i:2.54012078638933E-05,a:"Vector CANoe .NET API \n            Gets the momentary value of the PWM fall time\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadValueTransferCycle\u003cdouble\u003e MeasFallTime { get; } /* */ Property Value Type:  IReadValueTransferCycle /* */ Double /* ..."},"7353":{y:0,u:"../Content/html/54cd3b3b-569c-3be8-8969-a899ad3c5585.htm",l:-1,t:"IVT5201EvMode.MeasFrequency Property ",i:2.54012078638933E-05,a:"Vector CANoe .NET API \n            Gets the momentary value of the PWM frequency\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadValueTransferCycle\u003cdouble\u003e MeasFrequency { get; } /* */ Property Value Type:  IReadValueTransferCycle /* */ Double /* ..."},"7354":{y:0,u:"../Content/html/8e5a8212-20d9-6c1d-23ee-53519b0c5b9b.htm",l:-1,t:"IVT5201EvMode.MeasPPVoltage Property ",i:2.54012078638933E-05,a:"Vector CANoe .NET API \n            Gets the momentary value of the proximity pilot voltage\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadValueTransferCycle\u003cdouble\u003e MeasPPVoltage { get; } /* */ Property Value Type:  IReadValueTransferCycle /* */ ..."},"7355":{y:0,u:"../Content/html/bb587b7f-830c-8051-0cec-e2295e65829c.htm",l:-1,t:"IVT5201EvMode.MeasRiseTime Property ",i:2.54012078638933E-05,a:"Vector CANoe .NET API \n            Gets the momentary value of the PWM rise time\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadValueTransferCycle\u003cdouble\u003e MeasRiseTime { get; } /* */ Property Value Type:  IReadValueTransferCycle /* */ Double /* ..."},"7356":{y:0,u:"../Content/html/53f45ff9-bf99-8f3f-a0bd-73c9bb4f71c9.htm",l:-1,t:"IVT5201EvMode.MeasVoltageHigh Property ",i:2.54012078638933E-05,a:"Vector CANoe .NET API \n            Gets the momentary value of the PWM high voltage\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadValueTransferCycle\u003cdouble\u003e MeasVoltageHigh { get; } /* */ Property Value Type:  IReadValueTransferCycle /* */ ..."},"7357":{y:0,u:"../Content/html/aad88d90-0283-525d-45c9-f720942bfcb5.htm",l:-1,t:"IVT5201EvMode.MeasVoltageLow Property ",i:2.54012078638933E-05,a:"Vector CANoe .NET API \n            Gets the momentary value of the PWM low voltage\n             Namespace:   \n    Vector.CANoe.VTS Assembly:\n   Vector.CANoe.VTS.dll Syntax C# Copy IReadValueTransferCycle\u003cdouble\u003e MeasVoltageLow { get; } /* */ Property Value Type:  IReadValueTransferCycle /* */ Double ..."},});
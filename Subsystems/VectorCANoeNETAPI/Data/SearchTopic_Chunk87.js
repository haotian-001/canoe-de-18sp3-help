define({"6302":{y:0,u:"../Content/html/244acbfa-362b-0220-8d26-39d4cd9d60f5.htm",l:-1,t:"NetworkStream Constructor (Socket, FileAccess)",i:5.43363303512611E-05,a:"Vector CANoe .NET API \n            Creates a new instance of the  NetworkStream  class for the specified  Socket  with the specified access rights.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public NetworkStream(\n\tSocket ..."},"6303":{y:0,u:"../Content/html/e403b3ac-77e5-32ac-1e80-dbed29c16782.htm",l:-1,t:"NetworkStream Constructor (Socket, FileAccess, Boolean)",i:5.43363303512611E-05,a:"Vector CANoe .NET API \n            Creates a new instance of the  NetworkStream  class for the specified  Socket  \n            with the specified access rights and the specified  Socket  ownership.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# ..."},"6304":{y:0,u:"../Content/html/f312c586-15b2-3412-8ba7-7537e2dd719d.htm",l:-1,t:"NetworkStream Properties",i:2.02090472842714E-05,a:"Vector CANoe .NET API The  NetworkStream  type exposes the following members. Properties Top See Also Reference NetworkStream Class Vector.CANoe.Sockets Namespace"},"6305":{y:0,u:"../Content/html/c003d842-5be7-f182-e760-fe4801ddc67b.htm",l:-1,t:"NetworkStream.CanRead Property ",i:4.81896316679626E-05,a:"Vector CANoe .NET API \n            Gets a value that indicates whether the  NetworkStream  supports reading.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public override bool CanRead { get; } /* */ Return Value Type:  Boolean /* */ if data ..."},"6306":{y:0,u:"../Content/html/deaa69f0-2dcd-d8c0-4d23-83097034a20d.htm",l:-1,t:"NetworkStream.CanSeek Property ",i:4.81896316679626E-05,a:"Vector CANoe .NET API \n            Gets a value that indicates whether the stream supports seeking.\n            This property is currently not supported. This property always returns  /* */ Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public override ..."},"6307":{y:0,u:"../Content/html/5f411f94-e3f6-bf88-52bc-3a2ae6ed969b.htm",l:-1,t:"NetworkStream.CanTimeout Property ",i:4.81896316679626E-05,a:"Vector CANoe .NET API \n            Indicates whether timeout properties are usable for  NetworkStream .\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public override bool CanTimeout { get; } /* */ Return Value Type:  Boolean /* */ in all ..."},"6308":{y:0,u:"../Content/html/afa5059f-324c-8a62-3627-34b437d84d75.htm",l:-1,t:"NetworkStream.CanWrite Property ",i:4.81896316679626E-05,a:"Vector CANoe .NET API \n            Gets a value that indicates whether the  NetworkStream  supports writing.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public override bool CanWrite { get; } /* */ Return Value Type:  Boolean /* */ if data ..."},"6309":{y:0,u:"../Content/html/468f2396-5d46-dc76-b26b-b459423f5ebb.htm",l:-1,t:"NetworkStream.Length Property ",i:4.81896316679626E-05,a:"Vector CANoe .NET API Note: This API is now obsolete. \n            Gets the length of the data available on the stream.\n            This property is currently not supported and always throws a  NotSupportedException .\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n  ..."},"6310":{y:0,u:"../Content/html/93f87750-442f-2630-a3c8-b4fa50d2bc20.htm",l:-1,t:"NetworkStream.Position Property ",i:4.81896316679626E-05,a:"Vector CANoe .NET API Note: This API is now obsolete. \n            Gets or sets the current position in the stream.\n            This property is currently not supported and always throws a  NotSupportedException .\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n  ..."},"6311":{y:0,u:"../Content/html/37d24e43-62fe-3293-373f-ebe7a9d33f53.htm",l:-1,t:"NetworkStream.Readable Property ",i:4.81896316679626E-05,a:"Vector CANoe .NET API \n            Gets or sets a value that indicates whether the  NetworkStream  can be read.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy protected bool Readable { get; set; } /* */ Return Value Type:  Boolean /* */ to ..."},"6312":{y:0,u:"../Content/html/a935be58-cabd-ef15-8962-7ca671cb4fc8.htm",l:-1,t:"NetworkStream.Writeable Property ",i:4.81896316679626E-05,a:"Vector CANoe .NET API \n            Gets a value that indicates whether the  NetworkStream  is writable.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy protected bool Writeable { get; set; } /* */ Return Value Type:  Boolean /* */ if data can ..."},"6313":{y:0,u:"../Content/html/43bcb10b-cc2a-2b9f-0230-52aad8b55264.htm",l:-1,t:"NetworkStream Methods",i:1.97676032703522E-05,a:"Vector CANoe .NET API The  NetworkStream  type exposes the following members. Methods Top See Also Reference NetworkStream Class Vector.CANoe.Sockets Namespace"},"6314":{y:0,u:"../Content/html/207aa302-9151-bbb6-87dc-9fb7cb461fe7.htm",l:-1,t:"NetworkStream.BeginRead Method ",i:7.14248261347603E-05,a:"Vector CANoe .NET API \n            Begins an asynchronous read from the  NetworkStream .\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public override IAsyncResult BeginRead(\n\tbyte[] buffer,\n\tint offset,\n\tint size,\n\tAsyncCallback ..."},"6315":{y:0,u:"../Content/html/7ef771dc-6afa-a962-24a5-5549924e6427.htm",l:-1,t:"NetworkStream.BeginWrite Method ",i:7.14248261347603E-05,a:"Vector CANoe .NET API \n            Begins an asynchronous write to a stream.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public override IAsyncResult BeginWrite(\n\tbyte[] buffer,\n\tint offset,\n\tint size,\n\tAsyncCallback callback,\n\tObject ..."},"6316":{y:0,u:"../Content/html/ae2ace5f-c69b-4b86-20aa-b7fd82ca808f.htm",l:-1,t:"NetworkStream.Close Method ",i:6.23002847384154E-05,a:"Vector CANoe .NET API Overload List Top See Also Reference NetworkStream Class Vector.CANoe.Sockets Namespace"},"6317":{y:0,u:"../Content/html/50e378d0-58dc-7409-7e3a-e3d4bbbca71d.htm",l:-1,t:"NetworkStream.Close Method ",i:5.83397649925349E-05,a:"Vector CANoe .NET API \n            Closes the  NetworkStream .\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public override void Close() /* */ Version Information Supported from: 11.0 See Also Reference NetworkStream Class Close Overload ..."},"6318":{y:0,u:"../Content/html/b71e5e8c-f61c-7c1f-f040-af4986a89e90.htm",l:-1,t:"NetworkStream.Close Method (Int32)",i:5.83397649925349E-05,a:"Vector CANoe .NET API \n            Closes the  NetworkStream  after waiting the specified time to allow data to be sent.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public void Close(\n\tint timeout\n) /* */ Parameters timeout Type:  System ..."},"6319":{y:0,u:"../Content/html/a62ae22f-0489-3b47-cfe2-87efe0056ccf.htm",l:-1,t:"NetworkStream.Dispose Method ",i:4.42428862657332E-05,a:"Vector CANoe .NET API Overload List Top See Also Reference NetworkStream Class Vector.CANoe.Sockets Namespace"},"6320":{y:0,u:"../Content/html/633ae5be-46d9-1bcc-8d26-450dcd33500a.htm",l:-1,t:"NetworkStream.Dispose Method (Boolean)",i:5.71501311004544E-05,a:"Vector CANoe .NET API \n            Releases the unmanaged resources used by the  NetworkStream  and optionally releases the managed resources.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy protected override void Dispose(\n\tbool disposing\n) ..."},"6321":{y:0,u:"../Content/html/af1d2d6f-0385-4d53-2730-72734bd4fb6e.htm",l:-1,t:"NetworkStream.EndRead Method ",i:4.77481876540434E-05,a:"Vector CANoe .NET API \n            Handles the end of an asynchronous read.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public override int EndRead(\n\tIAsyncResult asyncResult\n) /* */ Parameters asyncResult Type:  System /* */ IAsyncResult ..."},"6322":{y:0,u:"../Content/html/aae6b74c-3933-c7e7-488b-bc469b161a01.htm",l:-1,t:"NetworkStream.EndWrite Method ",i:4.77481876540434E-05,a:"Vector CANoe .NET API \n            Handles the end of an asynchronous write.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public override void EndWrite(\n\tIAsyncResult asyncResult\n) /* */ Parameters asyncResult Type:  System /* */ ..."},"6323":{y:0,u:"../Content/html/744e3979-9ea1-3574-f801-5145d97bc394.htm",l:-1,t:"NetworkStream.Flush Method ",i:4.77481876540434E-05,a:"Vector CANoe .NET API Note: This API is now obsolete. \n            Flushes data from the stream. This method is reserved for future use.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy [ObsoleteAttribute(\"This method is not supported and ..."},"6324":{y:0,u:"../Content/html/9a060418-a1da-a761-7cae-0a21d44f29f9.htm",l:-1,t:"NetworkStream.Read Method ",i:4.77481876540434E-05,a:"Vector CANoe .NET API Note: This API is now obsolete. This method must not be used. Please use  BeginRead( /* */ Byte /* */ , Int32, Int32, AsyncCallback, Object)  instead. Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy [ObsoleteAttribute(\"This method ..."},"6325":{y:0,u:"../Content/html/98609a22-8b8c-f980-ab6e-5f781824c92e.htm",l:-1,t:"NetworkStream.Seek Method ",i:4.77481876540434E-05,a:"Vector CANoe .NET API Note: This API is now obsolete. \n             Sets the current position of the stream to the given value.\n             This method is currently not supported and always throws a  NotSupportedException .\n              Namespace:   \n    Vector.CANoe.Sockets Assembly:\n  ..."},"6326":{y:0,u:"../Content/html/15c112bd-64be-a69f-bbf6-49cb6a4d68d0.htm",l:-1,t:"NetworkStream.SetLength Method ",i:4.77481876540434E-05,a:"Vector CANoe .NET API Note: This API is now obsolete. \n            Sets the length of the stream.\n            This method is currently not supported and always throws a  NotSupportedException .\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy ..."},"6327":{y:0,u:"../Content/html/fe5cf123-c7ad-ae63-c86e-c6370e5c4846.htm",l:-1,t:"NetworkStream.Write Method ",i:4.77481876540434E-05,a:"Vector CANoe .NET API Note: This API is now obsolete. This method must not be used. Please use  BeginWrite( /* */ Byte /* */ , Int32, Int32, AsyncCallback, Object)  instead. Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy [ObsoleteAttribute(\"This method ..."},"6328":{y:0,u:"../Content/html/bbd1b3cb-d4de-f7f0-5d09-d68fefee324c.htm",l:-1,t:"OnIpReceivePrepareAttribute Class",i:0.000513263669363731,a:"Vector CANoe .NET API \n            Mark a method with this attribute, and it will be called right \n            before a received packet will be dispatched to the TCP/IP stack.\n             Inheritance Hierarchy System /* */ Object    System /* */ Attribute     OnMethodBoundaryAspectAttribute ..."},"6329":{y:0,u:"../Content/html/aa512645-ace6-2ae2-3290-55c856c82b12.htm",l:-1,t:"OnIpReceivePrepareAttribute Constructor ",i:0.000127728873033621,a:"Vector CANoe .NET API \n            Default constructor. \n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public OnIpReceivePrepareAttribute() /* */ Version Information Supported from: 12.0 SP3 See Also Reference OnIpReceivePrepareAttribute ..."},"6330":{y:0,u:"../Content/html/0b9290ff-9baf-91ee-2e08-71345666022e.htm",l:-1,t:"OnIpReceivePrepareAttribute Properties",i:2.6019682444231E-05,a:"Vector CANoe .NET API The  OnIpReceivePrepareAttribute  type exposes the following members. Properties Top See Also Reference OnIpReceivePrepareAttribute Class Vector.CANoe.Sockets Namespace"},"6331":{y:0,u:"../Content/html/2c17fd36-4219-5d2d-2fd7-5e01e322c5fd.htm",l:-1,t:"OnIpReceivePrepareAttribute Methods",i:2.6019682444231E-05,a:"Vector CANoe .NET API The  OnIpReceivePrepareAttribute  type exposes the following members. Methods Top See Also Reference OnIpReceivePrepareAttribute Class Vector.CANoe.Sockets Namespace"},"6332":{y:0,u:"../Content/html/81638749-fb63-adb4-741e-43b60627993f.htm",l:-1,t:"OnIpSendPrepareAttribute Class",i:0.000472232008062914,a:"Vector CANoe .NET API \n            Mark a method with this attribute, and it will be called right \n            before a packet will be sent by the TCP/IP stack.\n             Inheritance Hierarchy System /* */ Object    System /* */ Attribute     OnMethodBoundaryAspectAttribute ..."},"6333":{y:0,u:"../Content/html/ade7cc2c-be2b-a3ea-af96-9da8a30b9eff.htm",l:-1,t:"OnIpSendPrepareAttribute Constructor ",i:9.89360573102633E-05,a:"Vector CANoe .NET API \n            Default constructor. \n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public OnIpSendPrepareAttribute() /* */ Version Information Supported from: 12.0 SP3 See Also Reference OnIpSendPrepareAttribute Class ..."},"6334":{y:0,u:"../Content/html/13670e1b-c033-5f2f-81c4-e1790a6588de.htm",l:-1,t:"OnIpSendPrepareAttribute Properties",i:2.6019682444231E-05,a:"Vector CANoe .NET API The  OnIpSendPrepareAttribute  type exposes the following members. Properties Top See Also Reference OnIpSendPrepareAttribute Class Vector.CANoe.Sockets Namespace"},"6335":{y:0,u:"../Content/html/53c33d6d-c0ee-c4e5-f19b-5c4ce8bb80f2.htm",l:-1,t:"OnIpSendPrepareAttribute Methods",i:2.6019682444231E-05,a:"Vector CANoe .NET API The  OnIpSendPrepareAttribute  type exposes the following members. Methods Top See Also Reference OnIpSendPrepareAttribute Class Vector.CANoe.Sockets Namespace"},"6336":{y:0,u:"../Content/html/ab9d0faa-8a86-1a45-1159-b2ae4bef6fa4.htm",l:-1,t:"Socket Class",i:0.00158521386329958,a:"Vector CANoe .NET API \n            Provides ethernet network access on the socket level.\n             Inheritance Hierarchy System /* */ Object   Socket     Vector.CANoe.Sockets /* */ Socket Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public class ..."},"6337":{y:0,u:"../Content/html/e64cd74e-91f4-648d-9ac9-f75b644c3433.htm",l:-1,t:"Socket Constructor ",i:0.000467843750578518,a:"Vector CANoe .NET API \n            Initializes a new instance of the  Socket  class using the specified address family, socket type and protocol.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public Socket(\n\tAddressFamily ..."},"6338":{y:0,u:"../Content/html/4a55a3f4-a11c-440a-a89f-827114e1b1bb.htm",l:-1,t:"Socket Properties",i:2.6019682444231E-05,a:"Vector CANoe .NET API The  Socket  type exposes the following members. Properties Top See Also Reference Socket Class Vector.CANoe.Sockets Namespace"},"6339":{y:0,u:"../Content/html/8058e85d-044e-9ee6-70cc-4b51ebebc303.htm",l:-1,t:"Socket Methods",i:2.6019682444231E-05,a:"Vector CANoe .NET API The  Socket  type exposes the following members. Methods Top See Also Reference Socket Class Vector.CANoe.Sockets Namespace"},"6340":{y:0,u:"../Content/html/232cc7fd-4f15-5285-6f4d-707a91c21d61.htm",l:-1,t:"TcpClient Class",i:0.000769272308370408,a:"Vector CANoe .NET API \n            TCP Client implementation\n             Inheritance Hierarchy System /* */ Object   Vector.CANoe.Sockets /* */ TcpClient Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public class TcpClient : IDisposable /* */ The ..."},"6341":{y:0,u:"../Content/html/50b49c6b-4e2e-a22c-d2b7-a8b0866ee415.htm",l:-1,t:"TcpClient Constructor ",i:7.27473725848762E-05,a:"Vector CANoe .NET API Overload List Top See Also Reference TcpClient Class Vector.CANoe.Sockets Namespace"},"6342":{y:0,u:"../Content/html/fe808770-e4d5-711a-b624-33cc8fd232e3.htm",l:-1,t:"TcpClient Constructor ",i:5.62016093942476E-05,a:"Vector CANoe .NET API \n            Initializes a new instance of the  TcpClient  class.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public TcpClient() /* */ Version Information Supported from: 8.2 See Also Reference TcpClient Class ..."},"6343":{y:0,u:"../Content/html/d640a16a-abf2-7d6c-b51e-672d49b95d2b.htm",l:-1,t:"TcpClient Constructor (IPEndPoint)",i:5.62016093942476E-05,a:"Vector CANoe .NET API \n            Initializes a new instance of the  TcpClient  class and binds it to the specified local endpoint.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public TcpClient(\n\tIPEndPoint localEP\n) /* */ Parameters ..."},"6344":{y:0,u:"../Content/html/543eb625-fc4c-c584-fa3a-432bdc127a6f.htm",l:-1,t:"TcpClient Constructor (AddressFamily)",i:5.62016093942476E-05,a:"Vector CANoe .NET API \n            Initializes a new instance of the  TcpClient  class with the specified family.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public TcpClient(\n\tAddressFamily family\n) /* */ Parameters family Type:  ..."},"6345":{y:0,u:"../Content/html/2393e506-d9a6-3bd1-e442-4f3e25bf991f.htm",l:-1,t:"TcpClient Properties",i:1.97676032703522E-05,a:"Vector CANoe .NET API The  TcpClient  type exposes the following members. Properties Top See Also Reference TcpClient Class Vector.CANoe.Sockets Namespace"},"6346":{y:0,u:"../Content/html/b3d1c430-e6d4-ad24-62a0-76f1bbd36f04.htm",l:-1,t:"TcpClient.Active Property ",i:4.70152786299168E-05,a:"Vector CANoe .NET API \n            Gets or set a value that indicates whether a connection has been made.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy protected bool Active { get; set; } /* */ Return Value Type:  Boolean /* */ if the ..."},"6347":{y:0,u:"../Content/html/4d773887-f881-d3de-85bb-1c2640971ee1.htm",l:-1,t:"TcpClient.Available Property ",i:4.70152786299168E-05,a:"Vector CANoe .NET API \n            Gets the amount of data that has been received from the network and is available to be read.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public int Available { get; } /* */ Return Value Type:  Int32 The ..."},"6348":{y:0,u:"../Content/html/4b25abf6-5e3f-f240-d0d7-59d84e770e65.htm",l:-1,t:"TcpClient.Client Property ",i:5.7006691238586E-05,a:"Vector CANoe .NET API \n            Gets the underlying network  Socket .\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public Socket Client { get; } /* */ Return Value Type:  Socket The underlying network  Socket . Version Information ..."},"6349":{y:0,u:"../Content/html/58c2466c-b091-02a3-836e-d3b73dfa2583.htm",l:-1,t:"TcpClient.Connected Property ",i:4.70152786299168E-05,a:"Vector CANoe .NET API \n            Gets a value indicating whether the underlying  Socket  for a  TcpClient  is connected to a remote host.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public bool Connected { get; } /* */ Return Value ..."},"6350":{y:0,u:"../Content/html/221ff399-28dc-8b34-5808-054a5b7cd385.htm",l:-1,t:"TcpClient.ExclusiveAddressUse Property ",i:4.70152786299168E-05,a:"Vector CANoe .NET API \n            Gets or sets a  Boolean  value that specifies whether the  TcpClient  allows only one client to use a port.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public bool ExclusiveAddressUse { get; set; } /* */ ..."},"6351":{y:0,u:"../Content/html/8002270d-c5cb-dabe-55ac-aa63ba6053d3.htm",l:-1,t:"TcpClient.LingerState Property ",i:4.70152786299168E-05,a:"Vector CANoe .NET API \n            Gets or sets information about the linger state of the associated socket.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public LingerOption LingerState { get; set; } /* */ Return Value Type:  LingerOption A ..."},"6352":{y:0,u:"../Content/html/734c30f8-cf21-00e6-30f7-e05cdc1e4458.htm",l:-1,t:"TcpClient.NoDelay Property ",i:4.70152786299168E-05,a:"Vector CANoe .NET API \n            Gets or sets a value that disables a delay when send or receive buffers are not full.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public bool NoDelay { get; set; } /* */ Return Value Type:  Boolean /* */ ..."},"6353":{y:0,u:"../Content/html/45966641-34dd-71d4-4c23-3bf78af59487.htm",l:-1,t:"TcpClient.ReceiveBufferSize Property ",i:4.70152786299168E-05,a:"Vector CANoe .NET API \n            Gets or sets the size of the receive buffer.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public int ReceiveBufferSize { get; set; } /* */ Return Value Type:  Int32 The size of the receive buffer, in ..."},"6354":{y:0,u:"../Content/html/a65e5085-070d-aa65-8e49-5744aeeacdb9.htm",l:-1,t:"TcpClient.ReceiveTimeout Property ",i:4.70152786299168E-05,a:"Vector CANoe .NET API \n            Gets or sets a value that specifies the amount of time after which a synchronous Receive call will time out.\n            Note that there are no synchronous calls in CANoe, so this property has no effect.\n             Namespace:   \n    Vector.CANoe.Sockets ..."},"6355":{y:0,u:"../Content/html/4ef1b55f-58c0-a558-d0ec-c37ea6eba056.htm",l:-1,t:"TcpClient.SendBufferSize Property ",i:4.70152786299168E-05,a:"Vector CANoe .NET API \n            Gets or sets the size of the send buffer.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public int SendBufferSize { get; set; } /* */ Return Value Type:  Int32 The size of the send buffer, in bytes. Version ..."},"6356":{y:0,u:"../Content/html/8ea41558-decf-aedb-10f1-8660ec7fd908.htm",l:-1,t:"TcpClient.SendTimeout Property ",i:4.70152786299168E-05,a:"Vector CANoe .NET API \n            Gets or sets a value that specifies the amount of time after which a synchronous Send call will time out.\n            Note that there are no synchronous calls in CANoe, so this property has no effect.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n  ..."},"6357":{y:0,u:"../Content/html/7d47a03d-d401-2e13-0e85-7402331b53b9.htm",l:-1,t:"TcpClient Methods",i:2.03797148470297E-05,a:"Vector CANoe .NET API The  TcpClient  type exposes the following members. Methods Top See Also Reference TcpClient Class Vector.CANoe.Sockets Namespace"},"6358":{y:0,u:"../Content/html/0619753f-b388-7731-24ae-8aa565403ebd.htm",l:-1,t:"TcpClient.BeginConnect Method ",i:5.77488765253076E-05,a:"Vector CANoe .NET API \n            Begins an asynchronous request for a remote host connection. The remote host is specified by an  IPAddress  and a port number ( Int32 ).\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public IAsyncResult ..."},"6359":{y:0,u:"../Content/html/d985f961-9d70-3111-ef02-51465f1587ab.htm",l:-1,t:"TcpClient.Close Method ",i:4.76273902065944E-05,a:"Vector CANoe .NET API \n            Disposes this  TcpClient  instance and requests that the underlying TCP connection be closed.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public void Close() /* */ Version Information Supported from: 8.2 ..."},"6360":{y:0,u:"../Content/html/b85a8030-9d27-3d97-a7da-46bb115f58ff.htm",l:-1,t:"TcpClient.Dispose Method ",i:6.22071388481174E-05,a:"Vector CANoe .NET API Overload List Top See Also Reference TcpClient Class Vector.CANoe.Sockets Namespace"},"6361":{y:0,u:"../Content/html/91f3ca1f-9fd1-2ea4-613f-fb583166c306.htm",l:-1,t:"TcpClient.Dispose Method ",i:5.82031537111912E-05,a:"Vector CANoe .NET API \n            Releases all resources used by the current instance of the  TcpClient  class.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public void Dispose() /* */ Implements IDisposable /* */ Dispose /* */ Version ..."},"6362":{y:0,u:"../Content/html/fc65fbed-3a37-3851-2eff-f746a50921b9.htm",l:-1,t:"TcpClient.Dispose Method (Boolean)",i:5.82031537111912E-05,a:"Vector CANoe .NET API \n            Releases the unmanaged resources used by the  TcpClient  and optionally releases the managed resources.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy protected virtual void Dispose(\n\tbool disposing\n) /* */ ..."},"6363":{y:0,u:"../Content/html/53be15e4-9580-6a8a-099a-40b15db5e9a6.htm",l:-1,t:"TcpClient.EndConnect Method ",i:4.76273902065944E-05,a:"Vector CANoe .NET API \n            Asynchronously accepts an incoming connection attempt.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public void EndConnect(\n\tIAsyncResult asyncResult\n) /* */ Parameters asyncResult Type:  System /* */ ..."},"6364":{y:0,u:"../Content/html/f9de5967-e929-2526-ea23-17369b288334.htm",l:-1,t:"TcpClient.GetStream Method ",i:4.76273902065944E-05,a:"Vector CANoe .NET API \n            Returns the  NetworkStream  used to send and receive data.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public NetworkStream GetStream() /* */ Return Value Type:  NetworkStream The underlying  ..."},"6365":{y:0,u:"../Content/html/ffa62a42-79b1-8e6d-60c6-410bf9adc439.htm",l:-1,t:"TcpListener Class",i:0.000610825801469284,a:"Vector CANoe .NET API \n            TCPListener implementation.\n             Inheritance Hierarchy System /* */ Object   Vector.CANoe.Sockets /* */ TcpListener Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public class TcpListener /* */ The TcpListener ..."},"6366":{y:0,u:"../Content/html/f4e0f544-4cbc-9091-c775-b010a9d00142.htm",l:-1,t:"TcpListener Constructor ",i:7.44145440589372E-05,a:"Vector CANoe .NET API Overload List Top See Also Reference TcpListener Class Vector.CANoe.Sockets Namespace"},"6367":{y:0,u:"../Content/html/021d6994-52d3-9d18-4c2f-ca6604d64fd7.htm",l:-1,t:"TcpListener Constructor (Int32)",i:5.80376468388923E-05,a:"Vector CANoe .NET API Note: This API is now obsolete. \n            Initializes a new instance of the  TcpListener  class for IPv4 that listens on the specified port.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy [ObsoleteAttribute(\"This ..."},"6368":{y:0,u:"../Content/html/391c8f5d-1921-12b9-4420-9d12b35af375.htm",l:-1,t:"TcpListener Constructor (IPEndPoint)",i:5.80376468388923E-05,a:"Vector CANoe .NET API \n            Initializes a new instance of the  TcpListener  class with\n            the specified local endpoint.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public TcpListener(\n\tIPEndPoint localEP\n) /* */ Parameters ..."},"6369":{y:0,u:"../Content/html/0b7aea5b-1b2f-b385-3d1e-717794a506fc.htm",l:-1,t:"TcpListener Constructor (IPAddress, Int32)",i:5.80376468388923E-05,a:"Vector CANoe .NET API \n            Initializes a new instance of the  TcpListener  class that\n            listens for incoming connection attempts on the specified local IP address\n            and port number.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll ..."},"6370":{y:0,u:"../Content/html/edfe830f-64d0-3762-4a2c-b88dcc6a8c86.htm",l:-1,t:"TcpListener Properties",i:2.08642675077283E-05,a:"Vector CANoe .NET API The  TcpListener  type exposes the following members. Properties Top See Also Reference TcpListener Class Vector.CANoe.Sockets Namespace"},"6371":{y:0,u:"../Content/html/8547e88b-369b-582e-2ed9-394de8135eb3.htm",l:-1,t:"TcpListener.Active Property ",i:4.97117280878753E-05,a:"Vector CANoe .NET API \n            Gets a value that indicates whether  TcpListener  is actively listening for client connections.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy protected bool Active { get; } /* */ Return Value Type:  Boolean ..."},"6372":{y:0,u:"../Content/html/de95d915-a766-4d3f-c559-6ba6a1d0a406.htm",l:-1,t:"TcpListener.ExclusiveAddressUse Property ",i:4.97117280878753E-05,a:"Vector CANoe .NET API \n            Gets or sets a  Boolean  value that specifies whether the  TcpListener \n            allows only one underlying socket to listen to a specific port.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public bool ..."},"6373":{y:0,u:"../Content/html/1cb0a44f-e5ac-3ee8-b6f2-9b749b492d2e.htm",l:-1,t:"TcpListener.LocalEndpoint Property ",i:4.97117280878753E-05,a:"Vector CANoe .NET API \n            Gets the underlying  EndPoint  of the current  TcpListener .\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public EndPoint LocalEndpoint { get; } /* */ Return Value Type:  EndPoint The  EndPoint  to which ..."},"6374":{y:0,u:"../Content/html/9fed7d1a-553f-e640-f70e-ddd8310f9c5f.htm",l:-1,t:"TcpListener.Server Property ",i:4.97117280878753E-05,a:"Vector CANoe .NET API \n            Gets the underlying network  Socket .\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# Copy public Socket Server { get; } /* */ Return Value Type:  Socket The underlying  Socket . Version Information Supported ..."},});
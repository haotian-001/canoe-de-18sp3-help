<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeDEFamily.xml" data-mc-path-to-help-system="../../../../../" data-mc-conditions="Targets.CANoe-DE-Family" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" /><title>Value Access in Communication Concept</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../../Resources/Stylesheets/vTablePageTOC.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vTableLight.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vTable.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../CANoeDEFamily.htm#Topics/CANoeCANalyzer/CommunicationConcept/Programming/CCPValues.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <div>
                    <p class="StructurePath"><a href="../../CANoeDEFamily.htm" class="StructurePath" data-mc-conditions="Targets.CANoe-DE-Family"><img src="../../../../Resources/vImages/vToolIcons/CANoeDEFamily_Icon16_15x15.png" alt="" style="width: 15;height: 15;" />&#160;CANoe&#160;DE&#160;Product&#160;Families</a> Â» <a href="../CC.htm" class="StructurePath MCXref xref xrefStructurePath">Communication Concept</a> Â» <a href="CCP.htm" class="StructurePath">Programmierung</a> Â» <span class="mc-variable System.Title variable">Value Access in Communication Concept</span></p>
                    <h1><span class="mc-variable System.Title variable">Value Access in Communication Concept</span>
                    </h1>
                    <p class="MenuPath">&#160;</p>
                    <p class="ToolAvailability" data-mc-conditions="BuildProcess.ToolAvailability"><a href="../../../Shared/FeatureAvailability.htm" class="red" title="Feature availabilty for your product">Valid&#160;for</a>:&#160;&#160;CANoe&#160;DE<a name="aanchor23284"></a><MadCap:concept term="SFCANoeDE" />&#160;&#160;â¢&#160;&#160;CANoe:lite&#160;DE<a name="aanchor23285"></a><MadCap:concept term="SFCANoeLiteDE" />&#160;&#160;â¢&#160;&#160;CANoe4SW&#160;DE<a name="aanchor23286"></a><MadCap:concept term="SFCANoe4SWDE" />&#160;&#160;â¢&#160;&#160;CANoe4SW:lite&#160;DE<a name="aanchor23287"></a><MadCap:concept term="SFCANoe4SWLiteDE" /></p>
                    <p class="AutoSearchFilterConcepts"><a name="aanchor23288"></a>
                        <MadCap:concept term="SFCore" />
                    </p>
                    <p class="IndexConcept"><a name="kanchor7687"></a>
                    </p>
                </div>
                <div>
                    <p class="TableCOM"><a name="Shortcuts" id="Shortcuts"></a><span class="red">ON THIS&#160;PAGE:</span>
                    </p>
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTablePageTOC.css');" class="TableStyle-vTablePageTOC" cellspacing="2">
                        <col class="TableStyle-vTablePageTOC-Column-Column1" />
                        <tbody>
                            <tr class="TableStyle-vTablePageTOC-Body-Body1">
                                <td class="TableStyle-vTablePageTOC-BodyA-Column1-Body1">
                                    <p class="PageTOC"><a href="#Reference" class="PageTOC">General Access</a>
                                    </p>
                                    <p class="PageTOC"><a href="#Reaction" class="PageTOC">Reaction to Updates and Changes</a>
                                    </p>
                                    <p class="PageTOC"><a href="#DataTypes" class="PageTOC">Data Types for Values</a>
                                    </p>
                                    <p class="PageTOC"><a href="#Encodings" class="PageTOC">Using Encodings</a>
                                    </p>
                                    <p class="PageTOC"><a href="#PreDefinedEnumTypes" class="PageTOC">Predefined Enumeration Types</a>
                                    </p>
                                    <p class="PageTOC"><a href="#Reference" class="PageTOC">Overview of Available Values</a>
                                    </p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionMain"><a name="GeneralAccess" id="GeneralAccess"></a>General Access <a href="#Shortcuts" class="TopOfPage">[â² back]</a></h2>
                <p>In the simulation environment, there is a large number of values for the <a href="../CCDistributedObjects.htm">distributed objects</a>, depending on the type and number of endpoints and members: for example, the last received value of a service field or the value of a signal to be sent next. Generally, there are three categories of values. They are always accessed in the same way:</p>
                <ul>
                    <li>Received values sent by a communication partner on the other side of the communication. These values are read only. If the values are transmitted on a real network or bus, they can be referred to as measured values.</li>
                    <li>Data memory for the next transmission to a communication partner. These values are both readable and writable. The exact time and type of transmission depends on the configuration of the transmission behavior.</li>
                    <li>Values which are not transmitted directly, but configure the simulation in your <MadCap:conditionalText data-mc-conditions="Targets.CANoe-DE-Family">CANoe&#160;DE product</MadCap:conditionalText> or indicate a state adopted by a real or simulated object, e.g. whether an event is subscribed or not.</li>
                </ul>
                <p>In C#, you access values with the <span class="bold">value</span> property at the corresponding object.</p>
                <div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Example C# (DO)</p>
                                    <p class="TableSourceCode"><span class="CodeComment">// Read the value of the provided âCurrentPositionâ event in the âRightMirrorâ object</span>
                                        <br />var pos = RightMirror.CurrentPosition;<br /><br /><span class="CodeComment">// Write the value of the provided "CurrentPosition" event in the "RightMirror" object</span><br />RightMirror.CurrentPosition.x = 10;<br /><br /><span class="CodeComment">// Read the value of the consumed "CurrentPositionLeft" event in the "Controller" object</span><br />var pos = Controller.CurrentPositionLeft;</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p>You access values in CAPL by writing an $ before the corresponding object.</p>
                <div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Example CAPL (DO)</p>
                                    <p class="TableSourceCode"><span class="CodeComment">// Read the value of the provided "CurrentPosition" event in the "RightMirror" object</span>
                                        <br />pos = $RightMirror.CurrentPosition;<br /><br /><span class="CodeComment">// Write the value of the provided "CurrentPosition" event in the "RightMirror" object</span><br />$RightMirror.CurrentPosition.x = 10;<br /><br /><span class="CodeComment">// Read the value of the consumed "CurrentPositionLeft" event in the "Controller" object</span><br />pos = $Controller.CurrentPositionLeft;</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                    <col class="TableStyle-vTableSymbol-Column-Column1" />
                    <col class="TableStyle-vTableSymbol-Column-Column2" />
                    <tbody>
                        <tr>
                            <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                            </td>
                            <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                <p class="TableSymbolHead">Example Python</p>
                                <p class="TableSourceCode"><span class="CodeComment"># Read the value of the provided "CurrentPosition" event in the "RightMirror" object</span>
                                    <br />pos = RightMirror.CurrentPosition.copy()<br /><br /><span class="CodeComment"># Write the value of the provided "CurrentPosition" event in the "RightMirror" object</span><br />RightMirror.CurrentPosition.x = 10<br /><br /><span class="CodeComment"># Read the value of the consumed "CurrentPositionLeft" event in the "Controller" object</span><br />pos = Controller.CurrentPositionLeft</p>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <h2 class="SectionMain"><a name="Reaction" id="Reaction"></a>Reaction to Updates and Changes <a href="#Shortcuts" class="TopOfPage">[â² back]</a></h2>
                <p>You can react to a value changes with a handler or with a wait function. Handlers are particularly suitable for application models, while wait functions are predominantly used in test programs. In addition, there is status information regarding last update and change for all values.</p>
                <h2 class="SectionSub">Handlers</h2>
                <p>Handlers can react either only to an explicit change of the value (<span class="SourceCode">on change</span>) or to each new value even if this value is identical to the previous value (<span class="SourceCode">on update</span>). In your system, as a rule, you must specify on which endpoint you want to set the handler and with point-to-point communication you must also define the endpoint of the opposite side.</p>
                <p>In C#, attributes <span class="SourceCode">[OnChange(â¦)]</span> or <span class="SourceCode">[OnUpdate(â¦)]</span> are assigned to handlers. Note that for distributed objects there are special MemberIDs that are used to register the handlers, while for communication objects the members are identified by their type with <span class="SourceCode">typeof</span>, as the following examples show.</p>
                <div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Example C# (DO)</p>
                                    <p class="TableSourceCode"><span class="CodeComment">// React to the receipt of a value for the "CurrentPositionLeft" event in the "Controller" object. Note the MemberIDs used specifically for DOs</span>
                                        <br />[OnUpdate(Controller.MemberIDs.CurrentPositionLeft)]<br />public void OnUpdateFct() { }<br /><br /><span class="CodeComment">// React to the change of the provided "CurrentPosition" event in the "LeftMirror" object</span><br />[OnChange(LeftMirror.MemberIDs.CurrentPosition)]<br />public void OnChangeFct() {}</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p>In C#, the <span class="SourceCode">[WaitingHandler]</span> attribute can be optionally assigned to the handlers. Then you can also execute in the handlers wait functions from the <span class="bold">Vector.CANoe.Threading.Execution</span> class. The use of such a handler, however, is somewhat slower and when programming you should be aware that the system state can change during waiting. The handler can even be active multiple times simultaneously if the value is set again during waiting.</p>
                <p>In CAPL, the keywords <a href="../../../CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnValueChange.htm" class="MCXref xref">on value_change</a> or <a href="../../../CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnValueUpdate.htm" class="MCXref xref">on value_update</a> are assigned to the handlers.</p>
                <div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Example CAPL (DO)</p>
                                    <p class="TableSourceCode"><span class="CodeComment">// React to the receipt of a value for the "CurrentPositionLeft" event in the "Controller" object</span>
                                        <br />on value_update Controller.CurrentPositionLeft<br />{}<br /><br /><span class="CodeComment">// React to the change of the provided "CurrentPosition" event in the "LeftMirror" object</span><br />on value_change LeftMirror.CurrentPosition<br />{}</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p>In Python, the decorators <span class="SourceCode">on_change</span> and <span class="SourceCode">on_update</span> are assigned to the handlers.</p>
                <div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Example Python</p>
                                    <p class="TableSourceCode"><span class="CodeComment"># React to the receipt of a value for the "CurrentPositionLeft" event in the "Controller" object</span>
                                        <br />vector.canoe.on_update(Controller.CurrentPositionLeft)<br />def on_update_fct(self):<br />&#160;&#160;pass<br /><br /><span class="CodeComment"># React to the change of the provided "CurrentPosition" event in the "LeftMirror" object</span><br />vector.canoe.on_update(LeftMirror.CurrentPosition)<br />def on_change_fct(self):<br />&#160;&#160;pass</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub">Status Information for Values</h2>
                <p>In C#, Python and in CAPL, status information for values is made available by means of property syntax. The following information can be queried for each value:</p>
                <ul>
                    <li><span class="bold">ChangeTimeNS</span>: time stamp of the last change in nanoseconds since the last call to <span class="SourceCode">ResetValueState()</span>.</li>
                    <li><span class="bold">UpdateTimeNS</span>: time stamp of the last update in nanoseconds since the last call to <span class="SourceCode">ResetValueState()</span>.</li>
                    <li><span class="bold">ChangeCount</span>: number of changes since the last call of <span class="SourceCode">ResetValueState()</span>.</li>
                    <li><span class="bold">UpdateCount</span>: number of updates since the last call of <span class="SourceCode">ResetValueState()</span>.</li>
                    <li><span class="bold">ValueState</span>: <span class="bold">MeasurementValue</span> if the value has been updated since the start of the measurement or the last call of <span class="SourceCode">ResetValueState()</span>. Otherwise <span class="bold">OfflineValue</span>.</li>
                </ul>
                <p>In C#, this information is available via <span class="SourceCode">Runtime.GetStatus(â¦)</span>. In CAPL, these are direct properties of the values. In Python, these are direct properties of the values and are written lowercase and with <u>underscore</u>, e.g. <span class="Product">.value_state</span> instead of <span class="SourceCode">.ValueState</span>.</p>
                <p>If "<span class="SourceCode">ResetValueState()</span>" is called, the <span class="bold">ValueState</span> is reset to <span class="bold">OfflineValue</span>, the time stamps are reset to 0, and the counters are initialized with 0.</p>
                <div>
                    <table style="margin-left: 0;margin-right: auto;">
                        <col />
                        <col />
                        <tbody>
                            <tr>
                                <td>
                                    <p class="TableBold">C#</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">if (Runtime.GetStatus(MirrorAdjustment.CurrentPosition).ValueState != ValueState.MeasurementValue) { }</p>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="TableBold">CAPL</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">if (MirrorAdjustment.consumerSide[0,0].CurrentPosition.ChangeTimeNS != lastTime) { }</p>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="TableBold">Python</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">if (RightMirror.CurrentPosition. change_timens != last_time):<br />&#160;&#160;pass</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub">Wait Functions</h2>
                <div>
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTable.css');margin-left: 0;margin-right: auto;" class="TableStyle_vTable" cellspacing="0">
                        <col />
                        <col />
                        <col />
                        <thead>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Wait function to...</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">C#</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                    <p class="TableHead">CAPL</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">...set a certain value</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">C# <span class="SourceCode">Execution.Wait</span></td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">CAPL <a href="../../../CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForImplValue.htm" class="MCXref xref">TestWaitForImplValue</a></td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">...set a change or update counter greater than a certain value</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">C# <span class="SourceCode">Execution.WaitForChangeCountGreater</span> and <span class="SourceCode">Execution.WaitForUpdateCountGreater</span></td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">CAPL <a href="../../../CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForChangeCountGreater.htm" class="MCXref xref">TestWaitForChangeCountGreater</a> and <a href="../../../CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForUpdateCountGreater.htm" class="MCXref xref">TestWaitForUpdateCountGreater</a></td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">...set a change or update counter greater than its current value</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">C# <span class="SourceCode">Execution.WaitForChange</span> and <span class="SourceCode">Execution.WaitForUpdate</span></p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">CAPL <a href="../../../CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForChange.htm" class="MCXref xref">TestWaitForChange</a> and <a href="../../../CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForUpdate.htm" class="MCXref xref">TestWaitForUpdate</a></p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="Table">...set a change or update flag</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">C# <span class="SourceCode">Execution.WaitForChangeFlag</span> and <span class="SourceCode">Execution.WaitForUpdateFlag</span></p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">CAPL <a href="../../../CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForChangeFlag.htm" class="MCXref xref">TestWaitForChangeFlag</a> and <a href="../../../CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForUpdateFlag.htm" class="MCXref xref">TestWaitForUpdateFlag</a></p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd" colspan="2">
                                    <p class="Table">The flags are set automatically when a value is changed or updated and can only be reset manually by calling <span class="SourceCode">ClearChangeFlag()</span>/<span class="SourceCode">ClearUpdateFlag()</span> and <span class="SourceCode">ResetValueState()</span>.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div>
                    <table style="margin-left: 0;margin-right: auto;">
                        <col />
                        <col />
                        <tbody>
                            <tr>
                                <td>
                                    <p class="TableBold">C#</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">Runtime.GetStatus(MirrorAdjustment.CurrentPosition).ClearChangeFlag();<br />int waitResult = Execution.WaitForChangeFlag(MirrorAdjustment.CurrentPosition, 200);</p>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="TableBold">CAPL</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">MirrorAdjustment.consumerSide[0,0].CurrentPosition.ClearChangeFlag();<br />waitResult = TestWaitForChangeFlag(MirrorAdjustment.consumerSide[0,0].CurrentPosition, 200);</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionMain"><a name="DataTypes" id="DataTypes"></a>Data Types for Values <a href="#Shortcuts" class="TopOfPage">[â² back]</a></h2>
                <ul>
                    <li>Integer data types are mapped in CAPL to the smallest suitable CAPL data type, for example a 12-bit signed integer to int, a 24-bit unsigned integer to dword. In C#, depending on the sign and size, they are mapped to Int32, UInt32, Int64 or UInt64. In Python they are mapped ti int.</li>
                    <li>Floating point data types are mapped in C# to float or double, in CAPL to double, and in Python to float.</li>
                    <li>String data types are mapped in C# to string, and in Python to str. In CAPL, <span class="SourceCode">char[]</span> is used; as an exception to the standard array functions, you can directly use the assignment operator (=) when accessing values.<br /></li>
                    <div>
                        <table style="margin-left: 0;margin-right: auto;">
                            <col />
                            <col />
                            <tbody>
                                <tr>
                                    <td>
                                        <p class="TableBold">CAPL</p>
                                    </td>
                                    <td>
                                        <p class="TableSourceCode">char errorMessage[200];<br />errorMessage = $ErrorSignal[ECU1];</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <li>The bytes data type is mapped to a byte array. You can only read or write the array as a whole, not individual elements. In CAPL this is done with <a href="../../../CAPLFunctions/StructByteAccess/Functions/CAPLfunctionMemCpy.htm">memcpy</a>, in C# with <span class="SourceCode">GetBytes()</span>/<span class="SourceCode">SetBytes()</span>, and in Python via an assignment writing and via <span class="SourceCode">.copy()</span> reading. You can determine the current length of the value, i.e. the number of bytes, in CAPL as usual with <a href="../../../CAPLFunctions/Other/Functions/CAPLfunctionElCount.htm">elcount</a>, but note the distinction between the value itself and a possible target array:</li>
                    <div>
                        <table style="margin-left: 0;margin-right: auto;">
                            <col />
                            <col />
                            <tbody>
                                <tr>
                                    <td>
                                        <p class="TableBold">CAPL</p>
                                    </td>
                                    <td>
                                        <p class="TableSourceCode">byte source[5];<br />byte target[50];<br />// ... (fill source array)<br />memcpy($MyDO.BytesMember, source); // sets length to 5<br />memcpy(target, $ MyDO.BytesMember);<br />write(â%d %dâ, elcount($MyDO.BytesMember), elcount(target)); // 5 50</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </ul>
                <ul>
                    <li>Structs, unions and arrays can also be used as data types for variables and parameters in C#, Python and CAPL.</li>
                    <li class="Indent">They are reference types in CAPL too, i.e. the value is not copied during transfer to a function. You can copy it in CAPL with <a href="../../../CAPLFunctions/StructByteAccess/Functions/CAPLfunctionMemCpy.htm">memcpy</a>.</li>
                    <li class="Indent">If the binary layout of the data type has been defined, the bytes can be read and set.</li>
                    <li class="Indent">To access members of a struct or a union, property syntax, i.e. <span class="SourceCode">.Member</span> is used. To access array elements, <span class="SourceCode">[index]</span> is used. Both is true for CAPL and C#.</li>
                    <div class="Indent">
                        <table style="margin-left: 0;margin-right: auto;">
                            <col />
                            <col />
                            <tbody>
                                <tr>
                                    <td>
                                        <p class="TableBold">C#</p>
                                    </td>
                                    <td>
                                        <p class="TableSourceCode">maxSpeed = trafficController.Rules[myLane].MaxSpeed.ImplValue;</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <p class="TableBold">CAPL</p>
                                    </td>
                                    <td>
                                        <p class="TableSourceCode">maxSpeed = $trafficController.Rules[myLane].MaxSpeed;</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <p class="TableBold">Python</p>
                                    </td>
                                    <td>
                                        <p class="TableSourceCode">maxSpeed = trafficController.Rules[myLane].MaxSpeed.copy()</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <li class="Indent">With unions, the discriminator can be read. Setting a member automatically makes it the valid member of the union. It is a runtime error if an attempt is made to access a member other than the valid member.</li>
                    <li class="Indent">The length of an array can be read; with dynamic arrays, the length can also be set. To access this value, in C# and CAPL <span class="SourceCode">.Length</span> is used, and in Python the <span class="SourceCode">len</span> function.</li>
                    <div class="Indent">
                        <table style="margin-left: 0;margin-right: auto;">
                            <col />
                            <col />
                            <tbody>
                                <tr>
                                    <td>
                                        <p class="TableBold">C#</p>
                                    </td>
                                    <td>
                                        <p class="TableSourceCode">for (lane = 0; lane &lt; trafficController.Rules.Length; ++lane) { }</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <p class="TableBold">CAPL</p>
                                    </td>
                                    <td>
                                        <p class="TableSourceCode">for (lane = 0; lane &lt; $trafficController.Rules.Length; ++lane) { }</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <p class="TableBold">Python</p>
                                    </td>
                                    <td>
                                        <p class="TableSourceCode">for lane in range(0, len(trafficController.Rules.copy())):<br />&#160;&#160;pass</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <li>Maps cannot currently be used.</li>
                    <li>Structs members can be optional.</li>
                    <li class="Indent">In CAPL such members can be checked for validity by using the <span class="SourceCode">isValid</span> property. The member can be invalidated by calling the <span class="SourceCode">SetInvalid</span> method.</li>
                    <li class="Indent">In C# such members have a nullable type.</li>
                    <div class="Indent">
                        <table style="margin-left: 0;margin-right: auto;">
                            <col />
                            <col />
                            <tbody>
                                <tr>
                                    <td>
                                        <p class="TableBold">vCDL</p>
                                    </td>
                                    <td>
                                        <p class="TableSourceCode">namespace N {<br />&#160;&#160;struct T {<br />&#160;&#160;&#160;&#160;[optional] int32 i;<br />&#160;&#160;}<br />}</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <p class="TableBold">CAPL</p>
                                    </td>
                                    <td>
                                        <p class="TableSourceCode">struct N::T t;<br />Write("%d", t.i.IsValid);<br />t.i.SetInvalid();<br />Write("%d", t.i.IsValid);}</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </ul>
                <h2 class="SectionMain"><a name="Encodings" id="Encodings"></a>Using Encodings <a href="#Shortcuts" class="TopOfPage">[â² back]</a></h2>
                <h2 class="SectionSub">Linear Encodings</h2>
                <p>If a scalar value has linear encodings, three different converted values can be used:</p>
                <ul>
                    <li>The <span class="bold">implementation value</span> is the value which is used by the real code in an ECU. Its data type is explicitly defined in the communication description.</li>
                    <li>The <span class="bold">raw value</span> is the value which is used when transmitting data via a network or a bus. If it is not defined explicitly, then it corresponds to the implementation value.</li>
                    <li>The <span class="bold">physical value</span> is the decoded value which corresponds to a physical quantity. Although it is not saved anywhere and not transmitted, but this value is semantically interesting. Its data type depends on the data type of the implementation value and raw value. It is the "smallest" data type which still can represent all decoded values (possibly with loss of precision).</li>
                </ul>
                <p>In C#, the values are accessed with <span class="SourceCode">.ImplValue</span>, <span class="SourceCode">.RawValue</span> and <span class="SourceCode">.PhysValue</span>. If a linear encoding has been defined, <span class="SourceCode">.Value</span> can no longer be accessed.</p>
                <p>In CAPL, the values are accessed with <span class="SourceCode">.impl</span>, <span class="SourceCode">.raw</span> and <span class="SourceCode">.phys</span>. If a linear encoding has been defined, one of these suffixes must be used when accessing values.</p>
                <p>In Python, the values are accessed with <span class="SourceCode">.impl_value</span>, <span class="SourceCode">.raw_value</span> and <span class="SourceCode">.phys_value</span>. If a linear encoding has been defined, one of these suffixes must be used when accessing values.</p>
                <h2 class="SectionSub">Textual Encodings</h2>
                <p>For textual encodings, enumeration types are generated both in C#, Python and in CAPL. If this is not possible, since the same textual description has been used for several values, the textual encoding cannot be used in the APIs.</p>
                <h2 class="SectionSub">Units</h2>
                <p>Units are not yet available in the APIs.</p>
                <h2 class="SectionMain"><a name="PreDefinedEnumTypes" id="PreDefinedEnumTypes"></a>Predefined Enumeration Types <a href="#Shortcuts" class="TopOfPage">[â² back]</a></h2>
                <p>Predefined enumeration types are used for some values. In <span class="bold">C#</span>, these enumeration types are all in the <span class="SourceCode">Vector.CANoe.Runtime</span> namespace; in <span class="bold">CAPL</span>, they are in the <span class="SourceCode">_SystemDataTypes</span> namespace.</p>
                <h2 class="SectionSub">SubscriptionState</h2>
                <ul>
                    <li>For events, fields and PDUs on consumer side of service COs (per provider): C# type <span class="SourceCode">SubscriptionState</span>, CAPL type <span class="SourceCode">SDStates::EventSubscriptionAtConsumer</span>.</li>
                </ul>
                <div class="Indent">
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTableLight.css');margin-left: 0;margin-right: auto;" class="TableStyle-vTableLight" cellspacing="0">
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <thead>
                            <tr class="TableStyle-vTableLight-Head-Header1">
                                <th class="TableStyle-vTableLight-HeadE-Column1-Header1">
                                    <p class="TableHead">Enumerator		</p>
                                </th>
                                <th class="TableStyle-vTableLight-HeadD-Column1-Header1">
                                    <p class="TableHead">Description</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Unavailable (0)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">There is no (logical) connection to the provider.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Available (1)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">The provider is available, but the event is not subscribed.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="Table">Subscribed (2)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                    <p class="Table">		The provider is available and the event is subscribed.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <ul>
                    <li>	For events, fields and PDUs on provider side of service COs (per consumer): C# type <span class="SourceCode">SubscriptionState</span>, CAPL type <span class="SourceCode">SDStates::EventSubscriptionAtProvider</span>.</li>
                </ul>
                <div class="Indent">
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTableLight.css');margin-left: 0;margin-right: auto;" class="TableStyle-vTableLight" cellspacing="0">
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <thead>
                            <tr class="TableStyle-vTableLight-Head-Header1">
                                <th class="TableStyle-vTableLight-HeadE-Column1-Header1">
                                    <p class="Table">Enumerator		</p>
                                </th>
                                <th class="TableStyle-vTableLight-HeadD-Column1-Header1">
                                    <p class="Table">Description</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Unavailable (0)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">There is no (logical) connection to the consumer.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Available (1)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">The consumer is connected, but the event is not subscribed.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="Table">Subscribed (2)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                    <p class="Table">The consumer is connected and the event is subscribed.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <ul>
                    <li>For measuring points at events, fields and PDUs of service COs (per consumer/provider connection): C# type <span class="SourceCode">SubscriptionState</span>, CAPL type <span class="SourceCode">SDStates:: EventSubscriptionAtMP</span>.</li>
                </ul>
                <div class="Indent">
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTableLight.css');margin-left: 0;margin-right: auto;" class="TableStyle-vTableLight" cellspacing="0">
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <thead>
                            <tr class="TableStyle-vTableLight-Head-Header1">
                                <th class="TableStyle-vTableLight-HeadE-Column1-Header1">
                                    <p class="Table">Enumerator		</p>
                                </th>
                                <th class="TableStyle-vTableLight-HeadD-Column1-Header1">
                                    <p class="Table">Description</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Unavailable (0)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">There is no (logical) connection between consumer and provider.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Available (1)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">Consumer and provider are connected, but the event is not subscribed.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="Table">Subscribed (2)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                    <p class="Table">Consumer and provider are connected and the event is subscribed.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <ul>
                    <li>For consumed members of distributed objects with PublishSubscribe communication pattern: C# type <span class="SourceCode">DOSubscriptionState</span>, CAPL type <span class="SourceCode">SDStates::DOMemberSubscription</span></li>
                </ul>
                <div class="Indent">
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTableLight.css');margin-left: 0;margin-right: auto;" class="TableStyle-vTableLight" cellspacing="0">
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <thead>
                            <tr class="TableStyle-vTableLight-Head-Header1">
                                <th class="TableStyle-vTableLight-HeadE-Column1-Header1">
                                    <p class="Table">Enumerator		</p>
                                </th>
                                <th class="TableStyle-vTableLight-HeadD-Column1-Header1">
                                    <p class="Table">Description</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Unsubscribed (0)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">The subscription was not requested.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Requested (1)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">Subscription has been requested but not yet confirmed.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="Table">Subscribed (2)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                    <p class="Table">The member is subscribed.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub">AnnouncementState</h2>
                <p>For provided members of distributed objects with PublishSubscribe communication pattern, where an announcement is used (attribute <span class="bold">HasAnnounceAPI</span>=true): C# type <span class="SourceCode">DOAnnouncementState</span>, CAPL type <span class="SourceCode">SDStates::DOMemberAnnouncement</span>.</p>
                <div class="Indent">
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTableLight.css');margin-left: 0;margin-right: auto;" class="TableStyle-vTableLight" cellspacing="0">
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <thead>
                            <tr class="TableStyle-vTableLight-Head-Header1">
                                <th class="TableStyle-vTableLight-HeadE-Column1-Header1">
                                    <p class="Table">Enumerator		</p>
                                </th>
                                <th class="TableStyle-vTableLight-HeadD-Column1-Header1">
                                    <p class="Table">Description</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Unannounced (0)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">The member was not announced.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="Table">Announced (1)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                    <p class="Table">The member was announced.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub">ConnectionState</h2>
                <ul>
                    <li>For service COs on consumer side (per provider): C# type <span class="SourceCode">ConnectionStateConsumer</span>, CAPL type <span class="SourceCode">SDStates::ServiceAtConsumer</span></li>
                </ul>
                <div class="Indent">
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTableLight.css');margin-left: 0;margin-right: auto;" class="TableStyle-vTableLight" cellspacing="0">
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <thead>
                            <tr class="TableStyle-vTableLight-Head-Header1">
                                <th class="TableStyle-vTableLight-HeadE-Column1-Header1">
                                    <p class="Table">Enumerator		</p>
                                </th>
                                <th class="TableStyle-vTableLight-HeadD-Column1-Header1">
                                    <p class="Table">Description</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Unavailable (0)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">The provider is not known.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Connectable (1)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">The provider is known, but no (logical) connection has been established yet.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="Table">Available (2)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                    <p class="Table">The provider is known and a (logical) connection to it has been established.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <ul>
                    <li>For service COs on provider side (per consumer): C# type <span class="SourceCode">ConnectionStateProvider</span>, CAPL type <span class="SourceCode">SDStates::ConnectionAtProvider</span></li>
                </ul>
                <div class="Indent">
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTableLight.css');margin-left: 0;margin-right: auto;" class="TableStyle-vTableLight" cellspacing="0">
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <thead>
                            <tr class="TableStyle-vTableLight-Head-Header1">
                                <th class="TableStyle-vTableLight-HeadE-Column1-Header1">
                                    <p class="Table">Enumerator		</p>
                                </th>
                                <th class="TableStyle-vTableLight-HeadD-Column1-Header1">
                                    <p class="Table">Description</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Unavailable (0)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">The consumer is not known.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Connectable (1)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">The consumer is known, but no (logical) connection has been established yet.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="Table">Connected (2)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                    <p class="Table">The consumer is known and a (logical) connection to it has been established.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub">ServiceState</h2>
                <p>For service COs, per provider: C# type <span class="SourceCode">ServiceStateProvider</span>, CAPL type <span class="SourceCode">SDStates::ServiceAtProvider</span></p>
                <div class="Indent">
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTableLight.css');margin-left: 0;margin-right: auto;" class="TableStyle-vTableLight" cellspacing="0">
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <thead>
                            <tr class="TableStyle-vTableLight-Head-Header1">
                                <th class="TableStyle-vTableLight-HeadE-Column1-Header1">
                                    <p class="Table">Enumerator		</p>
                                </th>
                                <th class="TableStyle-vTableLight-HeadD-Column1-Header1">
                                    <p class="Table">Description</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Unavailable (0)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">The service at the provider has not been provided yet.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Initializing (1)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">The service at the provider is initializing.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="Table">Available (2)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                    <p class="Table">The service at the provider is available for potential consumer.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub">AutoAnswerMode</h2>
                <p>For methods on provider-side of service COs and for provided methods of distributed objects: C# type <span class="SourceCode">AnswerMode</span>, CAPL type <span class="SourceCode">VSIM::ServerSimulatorMode</span></p>
                <div class="Indent">
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTableLight.css');margin-left: 0;margin-right: auto;" class="TableStyle-vTableLight" cellspacing="0">
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <thead>
                            <tr class="TableStyle-vTableLight-Head-Header1">
                                <th class="TableStyle-vTableLight-HeadE-Column1-Header1">
                                    <p class="Table">Enumerator		</p>
                                </th>
                                <th class="TableStyle-vTableLight-HeadD-Column1-Header1">
                                    <p class="Table">Description</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Auto (0)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">The simulator answers calls with the set default values.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Suspended in C#, OffOrManual in CAPL (1)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">The simulator does not answer calls itself, but only calls registered handlers (e.g. <span class="SourceCode">[OnCall]</span> in C# or <span class="SourceCode">on fct_called</span> in CAPL).</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">Discard (2)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">The simulator discards incoming calls.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="Table">AutoField (3)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                    <p class="Table">For field getters and setters only:</p>
                                    <ul>
                                        <li>At Get the simulator returns the current provider value of the field.</li>
                                        <li>At Set the simulator sets the current provider value to the value of the parameter and returns it.</li>
                                    </ul>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub">InOutBehavior</h2>
                <p>For the defaults of inout parameters of methods, both on provider side of service COs and of provided methods of distributed objects: C# type <span class="SourceCode">DefaultInOutParamBehavior</span>, CAPL type <span class="SourceCode">VSIM::InOutBehavior</span></p>
                <div class="Indent">
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTableLight.css');margin-left: 0;margin-right: auto;" class="TableStyle-vTableLight" cellspacing="0">
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <thead>
                            <tr class="TableStyle-vTableLight-Head-Header1">
                                <th class="TableStyle-vTableLight-HeadE-Column1-Header1">
                                    <p class="Table">Enumerator		</p>
                                </th>
                                <th class="TableStyle-vTableLight-HeadD-Column1-Header1">
                                    <p class="Table">Description</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">UseDefaultValue (0)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">The simulator sets the out parameter to the set default value.</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="Table">UseInValue (1)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                    <p class="Table">The simulator sets the out parameter to the value of the in parameter; thus, from the function's point of view, the inout parameter remains unchanged.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionMain"><a name="Reference" id="Reference"></a>Overview of Available Values <a href="#Shortcuts" class="TopOfPage">[â² back]</a></h2>
                <p>The following table lists the values which can be used, depending on the CO type, communication type, and side. With point-to-point communication, the opposite side is often also relevant.</p>
                <h2 class="SectionSub">Value Types</h2>
                <ul>
                    <li><span class="bold">Sending</span>: The value is transmitted from the binding to the opposite side.</li>
                    <li><span class="bold">Receiving</span>: The value is received by the binding, this is a read-only value.</li>
                    <li><![CDATA[	]]><span class="bold">Internal</span>: The value is not transmitted via the binding. This is a read-write value.</li>
                    <li><span class="bold">Info</span>: The value indicates the status of an object or serves to observe simulation, this is a read-only value.</li>
                    <li><span class="bold">Configuration</span>: The value configures simulation, for example the call answering machine.</li>
                </ul>
                <h2>Values of Distributed Objects</h2>
                <div>
                    <table style="width: 100%;mc-table-style: url('../../../../Resources/Stylesheets/vTable.css');margin-left: 0;margin-right: auto;" class="TableStyle_vTable" cellspacing="0">
                        <col />
                        <col />
                        <col />
                        <col />
                        <thead>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Side</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Name	</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Data Type	</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                    <p class="TableHead">Value Type</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Consumed</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&lt;DataName&gt;</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Depending on data</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Received</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Consumed</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&lt;EventName&gt;</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Depending on event</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Received</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">
Consumed</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&lt;FieldName&gt;</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">	Depending on field</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Received</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Provided</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&lt;DataName&gt;</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Depending on data</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Sending</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Provided</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&lt;EventName&gt;</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Depending on event</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Sending</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Provided</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&lt;FieldName&gt;</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">	Depending on field</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Sending</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Internal</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">&lt;DataName&gt;</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Depending on data</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Internal</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Internal</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">&lt;EventName&gt;</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Depending on event</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Internal</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Internal</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">&lt;FieldName&gt;</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Depending on field</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Internal</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Consumed</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&lt;DataName&gt;.SubscriptionState<a href="javascript:void(0)" class="MCTextPopup popup popupHead">3<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody" aria-hidden="true"><span class="MCTextPopupArrow"> </span>Existence of value depends on the communication pattern.</span></a></p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">enum SubscriptionState</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Info</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Consumed</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&lt;EventName&gt;.SubscriptionState<a href="javascript:void(0)" class="MCTextPopup popup popupHead">3<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody" aria-hidden="true"><span class="MCTextPopupArrow"> </span>Existence of value depends on the communication pattern.</span></a></p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">enum SubscriptionState</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Info</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Consumed</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&lt;FieldName&gt;.SubscriptionState<a href="javascript:void(0)" class="MCTextPopup popup popupHead">3<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody" aria-hidden="true"><span class="MCTextPopupArrow"> </span>Existence of value depends on the communication pattern.</span></a></p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">enum SubscriptionState</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Info</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Provided</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">&lt;DataName&gt;.AnnouncementState<a href="javascript:void(0)" class="MCTextPopup popup popupHead">3<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody" aria-hidden="true"><span class="MCTextPopupArrow"> </span>Existence of value depends on the communication pattern.</span></a></p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">enum AnnouncementState</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Info</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Provided</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">&lt;EventName&gt;.AnnouncementState<a href="javascript:void(0)" class="MCTextPopup popup popupHead">3<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody" aria-hidden="true"><span class="MCTextPopupArrow"> </span>Existence of value depends on the communication pattern.</span></a></p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">enum AnnouncementState</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Info</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Provided</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">&lt;FieldName&gt;.AnnouncementState<a href="javascript:void(0)" class="MCTextPopup popup popupHead">3<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody" aria-hidden="true"><span class="MCTextPopupArrow"> </span>Existence of value depends on the communication pattern.</span></a></p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">enum AnnouncementState</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Info</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Consumed</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&lt;MethodName&gt;.LatestCall</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Struct with in-parameters</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Info</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Consumed</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">	&lt;MethodName&gt;.LatestReturn</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">	Struct with out-parameters</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Info</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Provided</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">	&lt;MethodName&gt;.LatestCall</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">	Struct with in-parameters</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Received</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Provided</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">&lt;MethodName&gt;.LatestReturn</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">	Struct with out-parameters</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Received</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Provided</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">&lt;MethodName&gt;.ParamDefaults</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Struct with out-parameters</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Config</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">
Provided</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">&lt;MethodName&gt;.DefaultResult</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Depending on method</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Config</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Provided</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">&lt;MethodName&gt;.AutoAnswerMode</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">enum AutoAnswerMode</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Config</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Provided</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">&lt;MethodName&gt;.AutoAnswerTimeNS</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Int64</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Config</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Internal</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&lt;MethodName&gt;.LatestCall</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">	Struct with in-parameters</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Received</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Internal</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&lt;MethodName&gt;.LatestReturn</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Struct with out-parameters</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Received</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Internal</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&lt;MethodName&gt;.ParamDefaults</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Struct with out-parameters</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Config</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Internal</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&lt;MethodName&gt;.DefaultResult</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Depending on method</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Config</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Internal</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&lt;MethodName&gt;.AutoAnswerMode</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">enum AutoAnswerMode</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Config</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">
Internal</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&lt;MethodName&gt;.AutoAnswerTimeNS</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Int64</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd" style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">Config</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p class="LinkList">&#160;</p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="BuildProcess.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="BuildProcess.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2024-04-8T20:56:42</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="BuildProcess.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">Â©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="Targets.CANoe-DE-Family">CANoe&#160;DE&#160;Product Families</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="Targets.CANalyzer,Targets.CANoe-DE-Family,Targets.CANoe-SE-Family,Targets.VectorTestUnitRunner">18</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>